name: "PR checks"

on:
  pull_request:
    branches: [ 'pr-add-changes' ]
  pull_request_target:
    branches: [ 'pr-add-changes' ]

jobs:
  check_commit:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.after }}  # for PR avoids checking out merge commit
        fetch-depth: 0  # include all history

    - name: Run script to validate commits for both pull request and a push
      env:
        GITHUB_PR_COMMITS_URL: ${{ github.event.pull_request.commits_url }}
        GITHUB_USER: ${{ github.event.pull_request.user.login }}
        START_COMMIT: ${{ github.event.before }}
        END_COMMIT: ${{ github.event.after }}
      run: |
        curl https://raw.githubusercontent.com/ansible/galaxy_ng/master/.ci/scripts/validate_commit_message_custom.py | python

    - name: "parse issue number, switch branch, commit, push"
      if: ${{ failure() }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ISSUES=`( gh pr view "${{github.event.number}}" ; gh pr view "${{github.event.number}}" -c ; echo "$GITHUB_HEAD_REF" ) | perl -nE 'say($1) while /\bAAH-?(\d+)\b/gi'`

        gh pr checkout "${{github.event.number}}"

        git config --global user.name 'GitHub Actions: PR checks workflow'
        git config --global user.email 'ansible-hub-ui+pr-checks@example.com'

        if [ -n "$ISSUES" ]; then
          TITLE=`gh pr view "${{github.event.number}}" --json title --jq .title`
          mkdir -p CHANGES
          for ISSUE in $ISSUES; do
            [ -e CHANGES/"$ISSUE".misc ] || echo "$TITLE" > CHANGES/"$ISSUE".misc
            git add CHANGES
            git commit --allow-empty -m "Issue: AAH-$ISSUE"
          done
        else
          git commit --allow-empty -m "No-Issue"
        fi
        git log -1 -p

        git push
