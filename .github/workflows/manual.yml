name: Manual workflow

on:
  workflow_dispatch:
#  pull_request:
#    branches: [ $default-branch stable-* ]
#  push:
#    branches: [ $default-branch stable-* ]
#  schedule:
#    - cron:  '30 5 * * *'

jobs:
  cypress:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: 'ansible-hub-ui'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: "Build pulp-galaxy-ng (with galaxy_ng master)"
      run: |
        mkdir pulp_galaxy_ng
        cd pulp_galaxy_ng
        
        echo '\
          FROM pulp/pulp-ci-centos:latest
          
          RUN pip3 install --upgrade \
            requests \
            git+https://github.com/ansible/galaxy_ng.git
          
          RUN mkdir -p /etc/nginx/pulp/
          RUN ln /usr/local/lib/python3.6/site-packages/pulp_ansible/app/webserver_snippets/nginx.conf /etc/nginx/pulp/pulp_ansible.conf
          RUN ln /usr/local/lib/python3.6/site-packages/pulp_container/app/webserver_snippets/nginx.conf /etc/nginx/pulp/pulp_container.conf
          RUN ln /usr/local/lib/python3.6/site-packages/galaxy_ng/app/webserver_snippets/nginx.conf /etc/nginx/pulp/galaxy_ng.conf
        ' > Containerfile
        
        docker build --file Containerfile --tag pulp/pulp-galaxy-ng:latest .
    - name: "Configure and run pulp-galaxy-ng"
      working-directory: 'pulp_galaxy_ng'
      run: |        
        mkdir settings pulp_storage pgsql containers
        echo "\
          ANSIBLE_API_HOSTNAME='http://localhost:8002'
          ANSIBLE_CONTENT_HOSTNAME='http://localhost:8002/api/galaxy/v3/artifacts/collections'
          CONTENT_ORIGIN='http://localhost:8002'
          GALAXY_API_PATH_PREFIX='/api/galaxy/'
          GALAXY_AUTHENTICATION_CLASSES=['rest_framework.authentication.SessionAuthentication', 'rest_framework.authentication.TokenAuthentication']
          GALAXY_DEPLOYMENT_MODE='standalone'
          PULP_CONTENT_PATH_PREFIX='/api/galaxy/v3/artifacts/collections/'
          RH_ENTITLEMENT_REQUIRED='insights'
          TOKEN_AUTH_DISABLED=True
          X_PULP_CONTENT_HOST='localhost'
        " | sed 's/^\s\+//' > settings/settings.py

        docker run \
             --detach \
             --publish 8002:80 \
             --name pulp \
             --volume "$(pwd)/settings":/etc/pulp \
             --volume "$(pwd)/pulp_storage":/var/lib/pulp \
             --volume "$(pwd)/pgsql":/var/lib/pgsql \
             --volume "$(pwd)/containers":/var/lib/containers \
             --device /dev/fuse \
             pulp/pulp-galaxy-ng:latest
    - name: "Build standalone UI (with ansible-hub-ui current branch)"
      working-directory: 'ansible-hub-ui'
      run: |
        npm ci
        npm run build-standalone
        sudo rm -rf ../pulp_galaxy_ng/pulp_storage/assets/galaxy_ng/
        sudo mv -v dist/ ../pulp_galaxy_ng/pulp_storage/assets/galaxy_ng
    - name: "Finish up and run cypress"
      working-directory: 'ansible-hub-ui/test'
      run: |        
        #docker exec pulp pip install django_extensions
        docker exec pulp pulpcore-manager reset-admin-password --password admin
        
        npm ci
        echo -e '{\n  "prefix": "/api/galaxy/",\n  "username": "admin",\n  "password": "admin"\n}' > cypress.env.json
        npm run cypress:chrome
