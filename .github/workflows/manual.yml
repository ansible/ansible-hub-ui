name: Manual workflow

on:
  workflow_dispatch:
#  pull_request:
#    branches: [ $default-branch stable-* ]
#  push:
#    branches: [ $default-branch stable-* ]
#  schedule:
#    - cron:  '30 5 * * *'

jobs:
  cypress:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        repository: 'pulp/pulp-oci-images'
        path: 'pulp-oci-images'   
    - working-directory: 'pulp-oci-images'
      run: |
        sed -i.bak -e '/^ARG/d' -e 's/\${.*}//' -e 's/galaxy-ng/git+https:\/\/github.com\/ansible\/galaxy_ng.git/' pulp_galaxy_ng/Containerfile
        diff -Naur pulp_galaxy_ng/Containerfile{.bak,} || true
        wget https://github.com/just-containers/s6-overlay/releases/download/v1.22.1.0/s6-overlay-amd64.tar.gz
        docker build --file pulp_ci_centos/Containerfile --tag pulp/pulp-ci-centos:latest .
        docker build --file pulp/Containerfile --tag pulp/pulp:latest .
        docker build --file pulp_galaxy_ng/Containerfile --tag pulp/pulp-galaxy-ng:latest .
       
        
#    - uses: actions/checkout@v2
#      with:
#        repository: 'ansible/galaxy_ng'
#        path: 'galaxy_ng'
#    - working-directory: 'galaxy_ng'
#      run: |
#        cp .compose.env.example .compose.env
#        ./compose build
#
#    - uses: actions/checkout@v2
#      with:
#        path: 'ansible-hub-ui'
#    - uses: actions/setup-node@v2
#      with:
#        node-version: '14'
#    - working-directory: 'ansible-hub-ui'
#      run: 'npm ci'
#    - working-directory: 'ansible-hub-ui/test'
#      run: |
#        npm ci
#        echo -e '{\n  "prefix": "/api/automation-hub/",\n  "username": "admin",\n  "password": "admin"\n}' > cypress.env.json
#
#    - working-directory: 'galaxy_ng'
#      run: |
#        ./compose up -d postgres redis
#        ./compose run --rm api manage migrate
#        ./compose down
#
#    - working-directory: 'galaxy_ng'
#      run: ./compose up -d
#    - working-directory: 'ansible-hub-ui'
#      run: |
#        # FIXME nowatch, or build-standalone+nginx?
#        npm run start-standalone &
#        cd test/
#        sleep 2m
#        npm run cypress:chrome
#
